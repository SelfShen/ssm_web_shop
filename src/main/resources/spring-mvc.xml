<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-4.2.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">

	<!-- 自动扫描该包，使springMvc认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="ssm"/>
	<!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->
	<mvc:annotation-driven/>
	<!-- 静态资源处理 css js imgs -->
	<mvc:resources location="/css/" mapping="/css/**"/>
	<mvc:resources location="/js/" mapping="/js/**" />
	<mvc:resources location="/imgs/" mapping="/imgs/**"/>
	
	<!-- 访问拦截 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/ssm/user/**"/><!-- 需要拦截路径 -->
			<mvc:exclude-mapping path="/ssm/home"/><!-- 不需要拦截路径 -->
			<mvc:exclude-mapping path="/ssm//user/login"/><!-- 不需要拦截路径 -->
			<mvc:exclude-mapping path="/ssm//user/sign"/><!-- 不需要拦截路径 -->
			<bean class="ssm.interceptor.UserInterceptor"></bean><!-- 拦截器类bean -->
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/ssm/admin/**"/><!-- 需要拦截路径 -->
			<mvc:exclude-mapping path="/ssm/admin/login"/><!-- 不需要拦截路径 -->
			<mvc:exclude-mapping path="/ssm/admin/adminLogin"/><!-- 不需要拦截路径 -->
			<bean class="ssm.interceptor.AdminInterceptor"></bean><!-- 拦截器类bean -->
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/ssm/source/**"/><!-- 需要拦截路径 -->
			<bean class="ssm.interceptor.SSMInterceptor"></bean><!-- 拦截器类bean -->
		</mvc:interceptor>
	</mvc:interceptors>

	
	<!-- 避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;chatset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	<!-- 上传文件 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8"/>
		<property name="maxInMemorySize" value="40560"></property>
		<property name="maxUploadSize" value="-1"></property>
	</bean>

	<!-- 启动SpringMvc的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter"></ref><!-- JSON转换器 -->
			</list>
		</property>
	</bean>

	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>application/json;charset=UTF-8</value>
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>

	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

</beans>